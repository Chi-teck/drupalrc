#===============================================================================
# DRUPALRC
#
# Project URL: https://github.com/Chi-teck/drupalrc
#===============================================================================

#-------------------------------------------------------------------------------
# Prints Drupal root directory.
#-------------------------------------------------------------------------------
function droot {
  local DIR=$([ -n "$1" ] && readlink -f "$1" || pwd)
  while true; do
    if [ "$DIR" == '/' ]; then
      return 1;
    fi
    
    if _dversion $DIR > /dev/null; then
      echo $DIR
      return 0
    fi
    
    local DRUPAL_ROOT
    for SUB_DIR in www docroot web htdocs public; do
      DRUPAL_ROOT=$DIR/$SUB_DIR
      if _dversion $DRUPAL_ROOT > /dev/null; then
        echo $DRUPAL_ROOT
        return 0
      fi
    done

    DIR=$(dirname $DIR)
  done
}

#-------------------------------------------------------------------------------
# Quick navigation between Drupal directories.
#-------------------------------------------------------------------------------
function dcd {

  if [ "$1" = $HOME -o "$1" = '-' ]; then
    cd $1
    return 0
  fi

  local DRUPAL_ROOT=$(droot)
  if [ -z "$DRUPAL_ROOT" ]; then
    _derror 'No Drupal installation was found.'
    return 1
  fi

  # Navigate to Drupal root if no argument was provided.
  if [ -z "$1" ]; then
    cd $DRUPAL_ROOT
    return 0;
  fi

  # Target directory exists in current location.
  if [ -d "$1" ]; then
    cd $1
    return 0
  fi

  local DRUPAL_VERSION=$(_dversion $DRUPAL_ROOT)

  # Quick search in predefined list of Drupal directories.
  for DIR in $(_dcd_dirs $DRUPAL_VERSION); do
    if [ -d "$DRUPAL_ROOT/$DIR/$1" ]; then
      cd $DRUPAL_ROOT/$DIR/$1
      return 0
    fi
  done

  # Deep search.
  local DIR;
  if [ $DRUPAL_VERSION = 8 ]; then
    DIR=$(find $DRUPAL_ROOT/modules $DRUPAL_ROOT/themes $DRUPAL_ROOT/profiles -path *tests -prune -o -path '*/'$1'.info.yml' -printf '%h\n')
  elif [ $DRUPAL_VERSION = 7 -o $DRUPAL_VERSION = 6 ]; then
    DIR=$(find $DRUPAL_ROOT/sites/all/modules $DRUPAL_ROOT/sites/all/themes $DRUPAL_ROOT/profiles -path *tests -prune -o -path '*/'$1'.info' -printf '%h\n')
  fi

  if [ ! -z $DIR ]; then
    cd $DIR
    return 0
  fi

  _derror "No such directory $1."
  return 1
}

#-------------------------------------------------------------------------------
# Downloads Drupal projects.
#-------------------------------------------------------------------------------
function dl {

  local DRUPAL_ROOT=$(droot)
  if [ -z "$DRUPAL_ROOT" ]; then
    _derror 'No Drupal installation was found.'
    return 1;
  fi

  if [ "$1" = '--enable' ]; then
    local ENABLE=1
    shift 1
  fi

  local DRUPAL_VERSION=$(_dversion $DRUPAL_ROOT)
  local PROJECTS=${@:-$(_dpeco $DRUPAL_VERSION)}
  if [ -z "$PROJECTS" ]; then
    _derror 'Missing project name.'
    return 1;
  fi

  if [ $DRUPAL_VERSION = 8 ]; then
    echo Starting composer, this may take some time...
    local VENDOR_DIR=$(_dvendor $DRUPAL_ROOT)
    composer require -d $VENDOR_DIR/.. $(echo $PROJECTS | sed 's/\</drupal\//g')
  else
    drush dl "$PROJECTS"
  fi

  if [ "$?" -a -n "$ENABLE" ]; then
    drush en "$PROJECTS"
  fi
}

#-------------------------------------------------------------------------------
# Downloads and enables Drupal modules.
#-------------------------------------------------------------------------------
function dle {
  dl --enable "$@"
}

#-------------------------------------------------------------------------------
# Rebuilds Drupal caches.
#-------------------------------------------------------------------------------
function dcr {
  local DRUPAL_ROOT=$(droot)
  if [ -n "$DRUPAL_ROOT" ] && [ $(_dversion $DRUPAL_ROOT) = 8 ]; then
    drush cache-rebuild
  else
    # Clear the cache even no Drupal installation was found. Drush may need this
    # to clear own cache.
    drush cache-clear all
  fi
}

#-------------------------------------------------------------------------------
# Opens Drupal configuration files in editor.
#-------------------------------------------------------------------------------
function dconf {
  local DRUPAL_ROOT=$(droot)
  if [ -z "$DRUPAL_ROOT" ]; then
    _derror 'No Drupal installation was found.'
    return 1;
  fi
  local FILE=$DRUPAL_ROOT/sites/default/${1-settings.php}
  if [ -f $FILE ]; then
    ${VISUAL-${EDITOR-vi}} $FILE
    return $?
  else
    return 1
  fi
}

#-------------------------------------------------------------------------------
# Executes scripts from vendor/bin directory.
#-------------------------------------------------------------------------------
function dbin {
  local DRUPAL_ROOT=$(droot)
  if [ -z "$DRUPAL_ROOT" ]; then
    _derror 'Drupal installation was not found.'
    return 1;
  elif [ -z "$1" ]; then
    _derror 'No file specified.'
    return 1;
  else
    local FILE=$(_dvendor $DRUPAL_ROOT)/bin/$1
    if [ ! -f $FILE ]; then
      _derror 'No such file.'
      return 1;
    else
      $FILE "${@:2}"
      return $?
    fi
  fi
}

#-------------------------------------------------------------------------------
# Executes Drupal console.
#-------------------------------------------------------------------------------
function drupal {
  local DRUPAL_ROOT=$(droot)
  if [ -n "$DRUPAL_ROOT" ] && [ $(_dversion $DRUPAL_ROOT) = 8 ]; then
    local FILE=$(_dvendor $DRUPAL_ROOT)/bin/drupal
    if [ -f $FILE ]; then
      $FILE "$@"
      return $?
    else
      _derror 'Drupal console is not installed on this site.'
      return 1;
    fi
  fi
  # Run Drupal console launcher.
  /usr/local/bin/drupal "$@"
  return $?
}

#-------------------------------------------------------------------------------
# Executes Drush.
#-------------------------------------------------------------------------------
function drush {
  local DRUPAL_ROOT=$(droot)
  if [ -n "$DRUPAL_ROOT" ] && [ $(_dversion $DRUPAL_ROOT) = 8 ]; then
    local FILE=$(_dvendor $DRUPAL_ROOT)/bin/drush
    if [ -f $FILE ]; then
      $FILE "$@"
      return $?
    else
      _derror 'Drush is not installed on this site.'
      return 1;
    fi
  fi
  # Run global Drush.
  /usr/local/bin/drush --root=$DRUPAL_ROOT "$@"
  return $?
}

#-------------------------------------------------------------------------------
# Executes PHP code sniffer using Drupal standards.
#-------------------------------------------------------------------------------
function drupalcs {
  phpcs --standard=Drupal,DrupalPractice "$@"
  return $?
}

#-------------------------------------------------------------------------------
# Runs PHPUnit tests.
#-------------------------------------------------------------------------------
function dunit {
  local DRUPAL_ROOT=$(droot)
  if [ -z "$DRUPAL_ROOT" ]; then
    _derror 'No Drupal installation was found.'
    return 1
  fi

  local FILE=$(_dvendor $DRUPAL_ROOT)/bin/phpunit
  if [ -f $FILE ]; then
    sudo -uwww-data $FILE -c $DRUPAL_ROOT/core $@
  else
    _derror 'PHPUnit was not found.'
    return 1
  fi
}

#-------------------------------------------------------------------------------
# Runs Drupal tests.
#-------------------------------------------------------------------------------
function dtest {
  local DRUPAL_ROOT=$(droot)
  if [ -z "$DRUPAL_ROOT" ]; then
    _derror 'No Drupal installation was found.'
    return 1
  fi

  local OPTIONS='--color --concurrency 31'
  if [[ $* != *--url* ]]; then
    local FILE=$DRUPAL_ROOT/sites/default/settings.local.php
    if [ -f $FILE ]; then
      local TEST_URL=$(sed -ne "s/\$settings\['test_url'\] = '\(.*\)';/\1/p" $FILE)
    fi
    if [ -n "$TEST_URL" ]; then
      OPTIONS+=" --url $TEST_URL";
    else
      _derror 'URL option is required.'
      return 1
    fi
  fi

  sudo -uwww-data php $DRUPAL_ROOT/$([ $(_dversion $DRUPAL_ROOT) = 8 ] && echo 'core/')scripts/run-tests.sh $OPTIONS "$@"
}

#-------------------------------------------------------------------------------
# Prepares sites/default directory for Drupal installation.
#-------------------------------------------------------------------------------
function dready {
  local DRUPAL_ROOT=$(droot)
  if [ -n "$DRUPAL_ROOT" ]; then
      local DIR=$DRUPAL_ROOT/sites/default
      if [ -d $DIR/files ]; then
      read -p 'Remove sites/default/files directory? '
      if [[ $REPLY =~ ^[Yy]$ ]]; then
        rm -r $DIR/files
      else
        return 0
      fi
    fi
    mkdir -m777 $DIR/files
    if [ -f $DIR/settings.php ]; then
      read -p 'Remove sites/default/settings.php file? '
      if [[ $REPLY =~ ^[Yy]$ ]]; then
        rm $DIR/settings.php
      else
        return 0
      fi
    fi
    cp $DIR/{default.,}settings.php &&
    chmod 777 $DIR/settings.php
  else
    _derror 'No Drupal installation was found.'
    return 1;
  fi
}

#-------------------------------------------------------------------------------
# Fixes file permissions.
#
# @see https://www.drupal.org/node/244924
#-------------------------------------------------------------------------------
function dpermissions {
  # https://www.drupal.org/node/244924
  _derror 'Not implemented yet.'
}

#-------------------------------------------------------------------------------
# Prints Drupal major version.
#
# @internal
#-------------------------------------------------------------------------------
function _dversion {
  if [ -f $1/index.php -a -f $1/core/includes/bootstrap.inc ]; then
    echo 8
  elif [ -f $1/index.php -a -d $1/includes/database ]; then
    echo 7
  elif [ -f $1/index.php -a -f $1/includes/database.inc ]; then
    echo 6
  else
    return 1
  fi
}

#-------------------------------------------------------------------------------
# Prints path to Drupal vendor directory.
#
# @internal
#-------------------------------------------------------------------------------
function _dvendor {
  if [ -d $1/vendor ]; then
    readlink -f $1/vendor
  # Vendor directory can be located outside document root.
  elif [ -d $1/../vendor ]; then
    readlink -f $1/../vendor
  else
    return 1
  fi
}

#-------------------------------------------------------------------------------
# Prints error message.
#
# @internal
#-------------------------------------------------------------------------------
function _derror {
  (>&2 echo "$@")
}

#-------------------------------------------------------------------------------
# Return common Drupal directories to navigate.
#
# @internal
#-------------------------------------------------------------------------------
function _dcd_dirs {
  local DIRS='. sites sites/all all sites/default default'
  [ $1 = 8 ] && DIRS="$DIRS modules themes profiles modules/contrib modules/custom core/modules core/themes core/profiles"
  [ $1 = 7 -o $1 = 6 ] && DIRS="$DIRS sites/all/modules sites/all/themes modules themes profiles sites/all"
  echo "$DIRS .."
}

#-------------------------------------------------------------------------------
# Query project name using peco command.
#
# @internal
# @see https://github.com/peco/peco
#-------------------------------------------------------------------------------
function _dpeco {
  PROJECTS_FILE=/usr/share/drupal-projects/d$1.txt
  if hash peco 2>/dev/null && [ -f $PROJECTS_FILE ]; then
    local PROJECT=$(cat $PROJECTS_FILE | peco)
    if [ -n "$PROJECT" ]; then
      echo $PROJECT
      return 0
    fi
  fi
  return 1
}
